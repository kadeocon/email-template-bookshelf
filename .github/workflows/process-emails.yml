name: Process Email Templates

on:
  push:
    branches:
      - main
    paths:
      - 'templates/**/*.html'
  # Manual trigger with options
  workflow_dispatch:
    inputs:
      process_all:
        description: 'Process all templates (not just changed ones)'
        required: false
        default: 'true'
        type: boolean

jobs:
  process-templates:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2  # Needed to see the previous commit for diff
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
      
      - name: Install dependencies
        run: |
          npm install puppeteer gifencoder canvas png-file-stream cheerio marked
          
          # Check if installation was successful
          echo "Checking if puppeteer is installed correctly:"
          node -e "try { require('puppeteer'); console.log('Puppeteer is installed correctly'); } catch(e) { console.error('Puppeteer is NOT installed correctly:', e.message); process.exit(1); }"
          
          echo "Checking if canvas is installed correctly:"
          node -e "try { require('canvas'); console.log('Canvas is installed correctly'); } catch(e) { console.error('Canvas is NOT installed correctly:', e.message); process.exit(1); }"
      
      # Create required directories if they don't exist
      - name: Ensure directories exist
        run: |
          mkdir -p docs/previews/static
          mkdir -p docs/previews/animated
          mkdir -p docs/data
          mkdir -p docs/templates
          mkdir -p docs/images
          mkdir -p temp-frames
          
          echo "Directory structure created:"
          ls -la docs/
          ls -la docs/previews/
      
      # Copy placeholder image if needed
      - name: Copy placeholder image
        run: |
          if [ ! -f docs/images/placeholder-email.svg ]; then
            echo "Placeholder image not found in docs/images"
            
            if [ -f "docs/images/placeholder-email.svg" ]; then
              echo "Found placeholder image at docs/images/placeholder-email.svg"
              cp docs/images/placeholder-email.svg docs/images/placeholder-email.svg
            else
              echo "Creating basic placeholder SVG"
              cat > docs/images/placeholder-email.svg << 'EOF'
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 400 600">
                <rect width="400" height="600" fill="#f0f0f0"/>
                <rect x="50" y="50" width="300" height="500" rx="8" fill="#ffffff" stroke="#dddddd" stroke-width="2"/>
                <text x="200" y="300" font-family="Arial" font-size="24" fill="#999999" text-anchor="middle">Email Preview</text>
              </svg>
              EOF
            fi
          fi
      
      # Step 1: Generate template metadata first
      - name: Generate template metadata
        run: node scripts/metadata-generator.js
      
      # Step 2: Validate and fix paths 
      - name: Validate and fix paths
        run: node scripts/path-validator.js
      
      # Step 3: Generate static thumbnails with improved script
      - name: Generate static thumbnails
        run: node scripts/enhanced-thumbnail-generator.js
      
      # Step 4: Generate scrolling GIFs with improved script
      - name: Generate scrolling GIFs
        run: node scripts/enhanced-gif-generator.js
      
      # Step 5: Generate detail pages for each template
      - name: Generate detail pages
        run: node scripts/generate-detail-pages.js
      
      # Debugging - List generated assets
      - name: Debug - List generated assets
        run: |
          echo "==== Static thumbnails ===="
          find docs/previews/static -type f | sort
          
          echo -e "\n==== Animated GIFs ===="
          find docs/previews/animated -type f | sort
          
          echo -e "\n==== Generated detail pages ===="
          find docs/templates -name "*.html" | sort
          
          echo -e "\n==== Content of templates.json file ===="
          cat docs/data/templates.json || echo "File not found or empty"
      
      # Step 6: Commit and push all generated assets
      - name: Commit and push generated assets
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add docs/
          git status
          git commit -m "Auto-generate thumbnails, metadata, and detail pages [skip ci]" || echo "No changes to commit"
          git push
