name: Process Email Templates with Debug

on:
  push:
    branches:
      - main
    paths:
      - 'templates/**/*.html'
  # Add manual trigger
  workflow_dispatch:

jobs:
  process-templates:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2  # Needed to see the previous commit for diff
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      
      - name: Install dependencies
        run: |
          npm install puppeteer gifencoder canvas png-file-stream cheerio marked
      
      # Debugging - List all template files
      - name: Debug - List template files
        run: |
          echo "==== Listing all HTML files in templates directory ===="
          find templates -name "*.html" -not -path "*/detail-page-template.html"
          echo "==== Template files count ===="
          find templates -name "*.html" -not -path "*/detail-page-template.html" | wc -l
      
      # Create required directories if they don't exist
      - name: Ensure directories exist
        run: |
          mkdir -p docs/previews/static
          mkdir -p docs/previews/animated
          mkdir -p docs/data
          mkdir -p docs/templates
          mkdir -p docs/images
      
      # Copy placeholder image if needed
      - name: Copy placeholder image
        run: |
          # Check if the placeholder image exists
          if [ ! -f docs/images/placeholder-email.svg ]; then
            echo "Creating placeholder image directory"
            mkdir -p docs/images
            echo "Copying placeholder image"
            cp templates/placeholder-email.svg docs/images/placeholder-email.svg || echo "Placeholder image not found, will use fallback method"
          fi
      
      # Debugging - Check metadata before running scripts
      - name: Debug - Check if templates.json exists
        run: |
          if [ -f "docs/data/templates.json" ]; then
            echo "==== Current templates.json content ===="
            cat docs/data/templates.json
          else
            echo "templates.json does not exist yet"
          fi
      
      # Step 1: Generate static thumbnails
      - name: Generate static thumbnails
        run: node scripts/thumbnail-generator.js || echo "Static thumbnail generation failed but continuing"
      
      # Step 2: Generate scrolling GIFs
      - name: Generate scrolling GIFs
        run: |
          # Find all HTML files in templates directory
          find templates -name "*.html" -not -path "*/detail-page-template.html" > template_files.txt
          if [ -s template_files.txt ]; then
            echo "==== Template files found ===="
            cat template_files.txt
            cat template_files.txt | xargs node scripts/scrolling-gif-generator.js || echo "GIF generation failed but continuing"
          else
            echo "No HTML template files found to process"
          fi
      
      # Step 3: Generate metadata for all templates
      - name: Generate template metadata
        run: node scripts/metadata-generator.js || echo "Metadata generation failed but continuing"
      
      # Debugging - Check metadata after running scripts
      - name: Debug - Check templates.json after metadata generation
        run: |
          if [ -f "docs/data/templates.json" ]; then
            echo "==== Updated templates.json content ===="
            cat docs/data/templates.json
          else
            echo "templates.json was not created"
          fi
      
      # Step 4: Generate detail pages for each template
      - name: Generate detail pages
        run: node scripts/generate-detail-pages.js || echo "Detail page generation failed but continuing"
      
      # Debugging - List generated detail pages
      - name: Debug - List generated detail pages
        run: |
          echo "==== Listing all generated detail pages ===="
          find docs/templates -name "*.html"
      
      # Step 5: Commit and push all generated assets
      - name: Commit and push generated assets
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add docs/
          git commit -m "Auto-generate thumbnails, metadata, and detail pages" || echo "No changes to commit"
          git push